//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineDemonstrator.MobileApi.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources_ru {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources_ru() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OnlineDemonstrator.MobileApi.Localization.AppResources.ru", typeof(AppResources_ru).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crowded Place Copyright (c) 2020
        ///            
        ///*** END USER LICENSE AGREEMENT ***
        ///            
        ///IMPORTANT: PLEASE READ THIS LICENSE CAREFULLY BEFORE USING THIS SOFTWARE.
        ///            
        ///1. LICENSE
        ///By receiving, opening the file package, and/or using Crowded Place (Software) containing this software, you agree that this End User User License Agreement (EULA) is a legally binding and valid contract and agree to be bound by it. You agree to abide by the intellectual property laws and all of the terms and con [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ha aceptado los términos de la licencia.
        /// </summary>
        internal static string LicenseIsNotAccepted {
            get {
                return ResourceManager.GetString("LicenseIsNotAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nueva reunión.
        /// </summary>
        internal static string LookAtTheNewDemonstrationPush {
            get {
                return ResourceManager.GetString("LookAtTheNewDemonstrationPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Una pancarta nueva en tu reunión.
        /// </summary>
        internal static string NewPosterPush {
            get {
                return ResourceManager.GetString("NewPosterPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No se puede agregar más de una pancarta activa (la pancarta esta válida durante una semana a partir de la fecha de creación).
        /// </summary>
        internal static string PosterConstraint {
            get {
                return ResourceManager.GetString("PosterConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crowded Place Privacy policy
        ///
        ///1. Crowded Place does not ask for your e-mail address, phone number or any information about you other than the device id. However, even this information will be protected by commercially acceptable means to prevent loss and theft, as well as unauthorized access, disclosure, copying, use or alteration.
        ///    
        ///2. Crowded Place does not sell content.
        ///
        ///3. Crowded Place does not require registration.
        ///
        ///4. The security of your information will not be compromised (we do not shar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrivacyPolicy {
            get {
                return ResourceManager.GetString("PrivacyPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to La queja ha sido registrada antes.
        /// </summary>
        internal static string ReportIsAlreadyAComplaint {
            get {
                return ResourceManager.GetString("ReportIsAlreadyAComplaint", resourceCulture);
            }
        }
    }
}
