//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineDemonstrator.MobileApi.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OnlineDemonstrator.MobileApi.Localization.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crowded Place Copyright (c) 2020
        ///            
        ///*** END USER LICENSE AGREEMENT ***
        ///            
        ///IMPORTANT: PLEASE READ THIS LICENSE CAREFULLY BEFORE USING THIS SOFTWARE.
        ///            
        ///1. LICENSE
        ///By receiving, opening the file package, and/or using Crowded Place (Software) containing this software, you agree that this End User User License Agreement (EULA) is a legally binding and valid contract and agree to be bound by it. You agree to abide by the intellectual property laws and all of the terms and con [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License is not accepted.
        /// </summary>
        internal static string LicenseIsNotAccepted {
            get {
                return ResourceManager.GetString("LicenseIsNotAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look at the new demonstration.
        /// </summary>
        internal static string LookAtTheNewDemonstrationPush {
            get {
                return ResourceManager.GetString("LookAtTheNewDemonstrationPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New poster in your demo.
        /// </summary>
        internal static string NewPosterPush {
            get {
                return ResourceManager.GetString("NewPosterPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot add more then one active banner in current demonstration (1 week from the day the demo was created or resumed).
        /// </summary>
        internal static string PosterConstraint {
            get {
                return ResourceManager.GetString("PosterConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Privacy Policy
        ///     
        ///1. Your privacy is important to us. It is Crowded Placer&apos;s policy to respect your privacy regarding any information we may collect from you through our app, Crowded Place.
        ///            
        ///2. We only ask for personal information when we truly need it to provide a service to you. We collect it by fair and lawful means, with your knowledge and consent. We also let you know why we&apos;re collecting it and how it will be used.
        ///            
        ///3. We only retain collected information for as long  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrivacyPolicy {
            get {
                return ResourceManager.GetString("PrivacyPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report is already a complaint.
        /// </summary>
        internal static string ReportIsAlreadyAComplaint {
            get {
                return ResourceManager.GetString("ReportIsAlreadyAComplaint", resourceCulture);
            }
        }
    }
}
